{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","C:/Source/aurelia-performance-test/src/app.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-fetch-client\";\nimport { inject, computedFrom, TaskQueue } from \"aurelia-framework\";\n\n@inject(HttpClient, TaskQueue)\nexport class App {\n\n  constructor(private client: HttpClient, private taskQueue: TaskQueue) {\n    client.configure(config => {\n      config\n        .useStandardConfiguration()\n    });\n  }\n\n  message = 'Hello World!';\n\n  properties: string[];\n  users: any[];\n  activate() {\n\n    //see that data is loaded before we start\n    return this.client.fetch('https://api.github.com/users')\n      .then(response => response.json())\n      .then(users => {\n        let res = users as any;\n        let usersToAdd = [];\n        while (this.users.length < 1000) {\n          for (var index = 0; index < res.length; index++) {\n            var element = res[index];\n            usersToAdd.push(element);\n          }\n        }\n        return usersToAdd;\n      }).then(usersToAdd => {\n      this.users =usersToAdd;\n      \n      }).then(x => {\n        this.properties = [];\n        let object = this.users[0];\n        for (var property in object) {\n          if (object.hasOwnProperty(property)) {\n            this.properties.push(property);\n          }\n        }\n      }).then(x => {\n        this.performanceTime = performance.now();\n      });\n  }\n\n  performanceTime: number;\n  attached() {\n    this.taskQueue.queueTask(() => {\n      this.performanceTime = (performance.now() - this.performanceTime) | 0;\n    });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"..\\src"}